CREATE TABLE bank_accounts(
                              PRIMARY KEY (bank_account_id),
                              bank_account_id INT UNIQUE NOT NULL CHECK ( bank_account_id >= 0 ),
                              bank_account_balance INT NOT NULL
);

CREATE TABLE firms(
                      PRIMARY KEY (firm_id),
                      FOREIGN KEY (firm_bank_account_id) REFERENCES bank_accounts(bank_account_id),
                      firm_id INT UNIQUE NOT NULL CHECK ( firm_id >= 0 ),
                      firm_name VARCHAR(100) NOT NULL,
                      firm_address VARCHAR(100) NOT NULL,
                      firm_chairman_id INT UNIQUE NOT NULL,
                      firm_profit INT NOT NULL,
                      firm_bank_account_id INT UNIQUE NOT NULL
);

CREATE TABLE lawyers(
                        PRIMARY KEY (lawyer_id),
                        FOREIGN KEY (lawyer_firm_id) REFERENCES firms(firm_id),
                        lawyer_id INT UNIQUE NOT NULL CHECK ( lawyer_id >= 0 ),
                        lawyer_name VARCHAR(100) NOT NULL,
                        lawyer_age INT NOT NULL CHECK ( lawyer_age >= 18 ),
                        lawyer_firm_id INT NOT NULL
);

CREATE TABLE clients(
                        PRIMARY KEY (client_id),
                        client_id INT UNIQUE NOT NULL CHECK ( client_id >= 0 ),
                        client_name VARCHAR(100) NOT NULL,
                        client_age INT NOT NULL CHECK ( client_age >= 18 )
);

CREATE TABLE cases(
                      PRIMARY KEY (case_id),
                      FOREIGN KEY (case_lawyer_id) REFERENCES lawyers(lawyer_id),
                      case_id INT UNIQUE NOT NULL CHECK ( case_id >= 0 ),
                      case_lawyer_id INT NOT NULL,
                      case_cost INT NOT NULL,
                      case_status BOOLEAN NOT NULL
);

CREATE TABLE transactions(
                             PRIMARY KEY (transaction_id),
                             FOREIGN KEY (bank_account_id) REFERENCES bank_accounts(bank_account_id),
                             FOREIGN KEY (client_id) REFERENCES clients(client_id),
                             FOREIGN KEY (case_id) REFERENCES cases(case_id),
                             transaction_id INT UNIQUE NOT NULL CHECK ( transaction_id >= 0 ),
                             amount INT NOT NULL CHECK ( amount > 0 ),
                             bank_account_id INT NOT NULL,
                             client_id INT NOT NULL,
                             case_id INT NOT NULL
);


CREATE TABLE clients_cases(
                      PRIMARY KEY (client_id, case_id),
                      FOREIGN KEY (client_id) REFERENCES clients(client_id),
                      FOREIGN KEY (case_id) REFERENCES cases(case_id),
                      client_id INT NOT NULL CHECK ( client_id >= 0 ),
                      case_id INT NOT NULL CHECK ( case_id >= 0 )
);

INSERT INTO bank_accounts (bank_account_id, bank_account_balance) VALUES
(1, 200000),
(100, 750000),
(200, 390000),
(15, 140000),
(330, 90000);

INSERT INTO firms (firm_id, firm_name, firm_address, firm_chairman_id, firm_profit, firm_bank_account_id) VALUES
(1, 'Novosibirsk Law Firm', 'Red Avenue 22', 1, 350000, 1),
(2, 'Moscow Law Firm', 'Bolshaya Lubyanka 3', 51, 1800000, 100),
(3, 'Saint Petersburg Law Board', 'Nevsky Avenue 34', 121, 920000, 200),
(4, 'Tomsk Law Firm', 'Sovetskaya Street 12', 31, 220000, 15),
(5, 'Vladivostok Law College', 'Gogolya Street 37', 91, 190000, 330);

INSERT INTO lawyers (lawyer_id, lawyer_name, lawyer_age, lawyer_firm_id) VALUES
(1, 'Sokolov Ivan', 53, 1),
(2, 'Samoylov Artem', 27, 1),
(3, 'Bulgakov Alexey', 44, 1),
(4, 'Kirsanova Olga', 36, 1),
(5, 'Krupina Inga', 40, 1),

(51, 'Palkin Vladimir', 61, 2),
(52, 'Maksimov Petr', 45, 2),
(53, 'Krylov Evgeniy', 31, 2),
(54, 'Kotsubenko Zhanna', 49, 2),
(55, 'Volodina Ekaterina', 29, 2),

(121, 'Krutoy Lavrenti', 68, 3),
(122, 'Papanov Bogdan', 33, 3),
(123, 'Lobova Beatrisa', 47, 3),
(124, 'Dyrbova Inga', 70, 3),
(125, 'Koycheva Madgalina', 39,  3),

(31, 'Sukhorukov Pavel', 63, 4),

(91, 'Lomova Tatiana', 42, 5);

INSERT INTO clients (client_id, client_name, client_age) VALUES
(11, 'Komkov Valery', 45),
(12, 'Leonova Daria', 24),
(13, 'Stravinsky Georgiy', 71),
(14, 'Stravinskaya Julia', 69),
(15, 'Golovachyova Elena', 31);

INSERT INTO cases (case_id, case_lawyer_id, case_cost, case_status) VALUES
(1, 3, 150000, true),
(2, 4, 50000, true),
(3, 1, 200000, true),
(4, 5, 90000, false),
(5, 5, 15000, true);

INSERT INTO clients_cases (client_id, case_id) VALUES
(11, 1),
(12, 2),
(13, 3),
(14, 3),
(15, 4),
(15, 5);

INSERT INTO transactions VALUES
(0, 1000, 1, 11, 1),
(1, 5000, 1, 11, 1),
(2, 25000, 1, 12, 2);

SELECT case_id, lawyer_name -- имя юриста для конкретного дела
FROM cases JOIN lawyers ON case_lawyer_id = lawyer_id
WHERE case_id = 1;

SELECT lawyers.lawyer_name, COUNT(case_lawyer_id) as cases -- количество дел у юриста
FROM (cases JOIN lawyers ON case_lawyer_id = lawyer_id)
GROUP BY lawyers.lawyer_name
ORDER BY cases DESC;

SELECT case_id, COUNT(client_id) as participants -- количество участников в деле
FROM clients_cases
GROUP BY  case_id
ORDER BY participants DESC;

SELECT firm_name, COUNT(case_id) -- количество дел у юр.фирмы
FROM (cases JOIN lawyers ON case_lawyer_id = lawyer_id JOIN firms ON lawyer_firm_id = firm_id)
GROUP BY firm_name;

SELECT client_name, client_age  -- клиенты-пенсионеры
FROM clients
WHERE client_age > 65
ORDER BY client_age DESC;

SELECT firm_name, lawyer_name -- имена председателей всех фирм
FROM (firms JOIN lawyers ON firm_chairman_id = lawyer_id)
ORDER BY lawyer_age DESC;

SELECT firm_name, bank_account_balance -- баланс в банке для фирм
FROM (firms INNER JOIN bank_accounts ON firm_bank_account_id = bank_account_id)
ORDER BY bank_account_balance DESC;

SELECT lawyer_name, cases.case_id, case_cost, SUM(amount) as Payed -- неоплаченные дела
FROM (transactions JOIN cases ON cases.case_id = transactions.case_id JOIN lawyers ON case_lawyer_id = lawyer_id)
GROUP BY lawyer_name, cases.case_id, case_cost
HAVING case_cost - SUM(amount) > 0;

SELECT client_name, SUM(amount) -- сумма всех оплат для клиентов
FROM (transactions JOIN clients ON transactions.client_id = clients.client_id)
GROUP BY clients.client_id;

SELECT bank_accounts.bank_account_id, COUNT(transaction_id) -- количество транзакций на банковские счета
FROM transactions JOIN bank_accounts ON transactions.bank_account_id = bank_accounts.bank_account_id
GROUP BY bank_accounts.bank_account_id;


SELECT * FROM lawyers;
SELECT * FROM firms;
SELECT * FROM cases;
SELECT * FROM clients;
SELECT * FROM bank_accounts;
SELECT * FROM transactions;

DROP TABLE lawyers;
DROP TABLE firms;
DROP TABLE cases;
DROP TABLE clients;
DROP TABLE bank_accounts;
DROP TABLE transactions;
DROP TABLE clients_cases;